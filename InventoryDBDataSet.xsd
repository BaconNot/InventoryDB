<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="InventoryDBDataSet" targetNamespace="http://tempuri.org/InventoryDBDataSet.xsd" xmlns:mstns="http://tempuri.org/InventoryDBDataSet.xsd" xmlns="http://tempuri.org/InventoryDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="InventoryDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="InventoryDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Storage_Database.Properties.Settings.GlobalReference.Default.InventoryDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PCInfoTableAdapter" GeneratorDataComponentClassName="PCInfoTableAdapter" Name="PCInfo" UserDataComponentName="PCInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventoryDBConnectionString (Settings)" DbObjectName="dbo.PCInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PCInfo] WHERE (([Id] = @Original_Id) AND ([InventoryNum] = @Original_InventoryNum) AND ([OS] = @Original_OS) AND ([RegisteredUsers] = @Original_RegisteredUsers))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoryNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OS" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RegisteredUsers" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RegisteredUsers" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PCInfo] ([Id], [InventoryNum], [OS], [RegisteredUsers]) VALUES (@Id, @InventoryNum, @OS, @RegisteredUsers);
SELECT Id, InventoryNum, OS, RegisteredUsers FROM PCInfo WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoryNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OS" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RegisteredUsers" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RegisteredUsers" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, InventoryNum, OS, RegisteredUsers FROM dbo.PCInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PCInfo] SET [Id] = @Id, [InventoryNum] = @InventoryNum, [OS] = @OS, [RegisteredUsers] = @RegisteredUsers WHERE (([Id] = @Original_Id) AND ([InventoryNum] = @Original_InventoryNum) AND ([OS] = @Original_OS) AND ([RegisteredUsers] = @Original_RegisteredUsers));
SELECT Id, InventoryNum, OS, RegisteredUsers FROM PCInfo WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoryNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OS" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RegisteredUsers" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RegisteredUsers" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoryNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OS" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RegisteredUsers" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RegisteredUsers" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="InventoryNum" DataSetColumn="InventoryNum" />
              <Mapping SourceColumn="OS" DataSetColumn="OS" />
              <Mapping SourceColumn="RegisteredUsers" DataSetColumn="RegisteredUsers" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblLoginTableAdapter" GeneratorDataComponentClassName="tblLoginTableAdapter" Name="tblLogin" UserDataComponentName="tblLoginTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventoryDBConnectionString (Settings)" DbObjectName="dbo.tblLogin" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblLogin] WHERE (([Username] = @Original_Username) AND ([Password] = @Original_Password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblLogin] ([Username], [Password]) VALUES (@Username, @Password);
SELECT Username, Password FROM tblLogin WHERE (Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Username, Password FROM dbo.tblLogin</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblLogin] SET [Username] = @Username, [Password] = @Password WHERE (([Username] = @Original_Username) AND ([Password] = @Original_Password));
SELECT Username, Password FROM tblLogin WHERE (Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="InventoryDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="InventoryDBDataSet" msprop:Generator_UserDSName="InventoryDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="PCInfo" msprop:Generator_TableClassName="PCInfoDataTable" msprop:Generator_TableVarName="tablePCInfo" msprop:Generator_TablePropName="PCInfo" msprop:Generator_RowDeletingName="PCInfoRowDeleting" msprop:Generator_RowChangingName="PCInfoRowChanging" msprop:Generator_RowEvHandlerName="PCInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="PCInfoRowDeleted" msprop:Generator_UserTableName="PCInfo" msprop:Generator_RowChangedName="PCInfoRowChanged" msprop:Generator_RowEvArgName="PCInfoRowChangeEvent" msprop:Generator_RowClassName="PCInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="InventoryNum" msprop:Generator_ColumnVarNameInTable="columnInventoryNum" msprop:Generator_ColumnPropNameInRow="InventoryNum" msprop:Generator_ColumnPropNameInTable="InventoryNumColumn" msprop:Generator_UserColumnName="InventoryNum" type="xs:int" />
              <xs:element name="OS" msprop:Generator_ColumnVarNameInTable="columnOS" msprop:Generator_ColumnPropNameInRow="OS" msprop:Generator_ColumnPropNameInTable="OSColumn" msprop:Generator_UserColumnName="OS">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RegisteredUsers" msprop:Generator_ColumnVarNameInTable="columnRegisteredUsers" msprop:Generator_ColumnPropNameInRow="RegisteredUsers" msprop:Generator_ColumnPropNameInTable="RegisteredUsersColumn" msprop:Generator_UserColumnName="RegisteredUsers">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblLogin" msprop:Generator_TableClassName="tblLoginDataTable" msprop:Generator_TableVarName="tabletblLogin" msprop:Generator_TablePropName="tblLogin" msprop:Generator_RowDeletingName="tblLoginRowDeleting" msprop:Generator_RowChangingName="tblLoginRowChanging" msprop:Generator_RowEvHandlerName="tblLoginRowChangeEventHandler" msprop:Generator_RowDeletedName="tblLoginRowDeleted" msprop:Generator_UserTableName="tblLogin" msprop:Generator_RowChangedName="tblLoginRowChanged" msprop:Generator_RowEvArgName="tblLoginRowChangeEvent" msprop:Generator_RowClassName="tblLoginRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PCInfo" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="tblLogin_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblLogin" />
      <xs:field xpath="mstns:Username" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="UserFK" msdata:parent="tblLogin" msdata:child="PCInfo" msdata:parentkey="Username" msdata:childkey="RegisteredUsers" msprop:Generator_UserChildTable="PCInfo" msprop:Generator_ChildPropName="GetPCInfoRows" msprop:Generator_UserRelationName="UserFK" msprop:Generator_RelationVarName="relationUserFK" msprop:Generator_UserParentTable="tblLogin" msprop:Generator_ParentPropName="tblLoginRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>